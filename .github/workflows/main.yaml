name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3


      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set environment variables and run main.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.REGION }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USER: ${{ secrets.DB_USER }}
          ENV: ${{ secrets.ENV }}
          ROLL_IAM: ${{ secrets.ROLL_IAM }}
        run: |
          source ~/conectdataf/bin/activate
          pip install -r requirements.txt
          python main.py


      # - name: Install Utilities
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y jq unzip
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
      #     IMAGE_TAG: latest
      # # - name: Run Docker Image to serve users
      #   run: |
      #    docker buildx build -t cls .
      #    #-t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          
      #    docker run -d -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.REGION }}' -e 'DB_HOST=${{ secrets.DB_HOST }}' -e 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' -e 'DB_USER=${{ secrets.DB_USER }}' -e 'ENV=${{ secrets.ENV }}' -e 'ROLL_IAM=${{ secrets.ROLL_IAM }}' cls 
      #       #$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         
      #    #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
