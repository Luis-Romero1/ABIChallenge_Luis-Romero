name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3


      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
  Continuous-Deployment:
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      # - name: Run SageMaker training and deployment
      #   env:
      #     AWS_REGION: ${{ secrets.REGION }}
      #     ACESS_POINT: ${{ secrets.ACESS_POINT }}
      #     AWS_ECR_LOGIN_URIX: ${{ secrets.AWS_ECR_LOGIN_URIX }}
      #     DB_HOST: ${{ secrets.DB_HOST }}
      #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      #     DB_USER: ${{ secrets.DB_USER }}
      #     ENV: ${{ secrets.ENV }}
      #     ROLL_IAM: ${{ secrets.ROLL_IAM }}
      #     SGIN: ${{ secrets.SGIN }}
      #     SGOUT: ${{ secrets.SGOUT }}
      #     SUBDB: ${{ secrets.SUBDB }}
      #     SUBPRI: ${{ secrets.SUBPRI }}
      #     ECR_REPOSITORY_NAME: ${{ secrets.ECR_REPOSITORY_NAME }}
      #   run: |
      #     source ~/conectdataf/bin/activate
      #     pip install --upgrade pip
      #     pip install boto3 sagemaker setuptools
      #     python sagemaker_main_model.py
        # shell: bash
